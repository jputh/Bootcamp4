{"ast":null,"code":"var _jsxFileName = \"/Users/joeymac/Documents/Fall 2019/SoftwareEng/bootcamp4/src/components/BuildingList.js\";\nimport React, { Component } from 'react'; //has data, filterText, and selectedUpdate function in props\n\nclass BuildingList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.buildingList = data.filter(building => {\n      if (building.name.toLowerCase().indexOf(filterText.toLowerCase()) >= 0 | building.code.toLowerCase().indexOf(filterText.toLowerCase()) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }).map(directory => {\n      return React.createElement(\"tr\", {\n        key: directory.id,\n        onClick: () => selectedUpdate(directory.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, directory.code, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \", directory.name, \" \"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, buildingList);\n  }\n\n}\n\nexport default BuildingList;","map":{"version":3,"sources":["/Users/joeymac/Documents/Fall 2019/SoftwareEng/bootcamp4/src/components/BuildingList.js"],"names":["React","Component","BuildingList","buildingList","data","filter","building","name","toLowerCase","indexOf","filterText","code","map","directory","id","selectedUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAUlCE,YAVkC,GAUnBC,IAAI,CAACC,MAAL,CAAYC,QAAQ,IAAI;AACvC,UAAGA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,OAA5B,CAAoCC,UAAU,CAACF,WAAX,EAApC,KAAiE,CAAjE,GACHF,QAAQ,CAACK,IAAT,CAAcH,WAAd,GAA4BC,OAA5B,CAAoCC,UAAU,CAACF,WAAX,EAApC,KAAiE,CADjE,EACmE;AAClE,eAAO,IAAP;AACA,OAHD,MAII;AACH,eAAO,KAAP;AACA;AACD,KARe,EASfI,GATe,CASXC,SAAS,IAAI;AAEjB,aACC;AACC,QAAA,GAAG,EAAEA,SAAS,CAACC,EADhB;AAEC,QAAA,OAAO,EAAG,MAAMC,cAAc,CAACF,SAAS,CAACC,EAAX,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,SAAS,CAACF,IAAf,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAME,SAAS,CAACN,IAAhB,MALF,CADD;AAWA,KAtBe,CAVmB;AAAA;;AAkCnCS,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEb,YADF,CADD;AAKA;;AAxCkC;;AA2CrC,eAAeD,YAAf","sourcesContent":["import React, {Component} from 'react';\n\n//has data, filterText, and selectedUpdate function in props\nclass BuildingList extends Component {\n\t\n\t\t//console.log('This is my directory file', this.props.data);\n\t\t//const { data, filterText } = this.props;\n\n\t\t// selectedUpdate(){\n\t\t// \tconst buildingID = this.myID.value;\n\t\t// \tthis.props.selectedUpdate(buildingID);\n\t\t// }\n\n\t\t buildingList = data.filter(building => {\n\t\t\tif(building.name.toLowerCase().indexOf(filterText.toLowerCase()) >= 0 |\n\t\t\tbuilding.code.toLowerCase().indexOf(filterText.toLowerCase()) >= 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})\n\t\t.map(directory => {\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<tr \n\t\t\t\t\tkey={directory.id}\n\t\t\t\t\tonClick= {() => selectedUpdate(directory.id)}\n\t\t\t\t>\n\t\t\t\t\t\t<td>{directory.code} </td>\n\t\t\t\t\t\t<td> {directory.name} </td>\n\t\t\t\t</tr>\n\t\t\t)\n\n\t\t\t\n\t\t})\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{buildingList}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\n}\nexport default BuildingList;\n\n"]},"metadata":{},"sourceType":"module"}